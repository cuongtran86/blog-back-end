"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.asAlwaysIfValueSource = exports.Argument = exports.__getValueSourcePrivate = exports.__getValueSourceOfObject = exports.isValueSource = void 0;
const symbols_1 = require("../utils/symbols");
function isValueSource(value) {
    if (value === undefined || value === null) {
        return false;
    }
    if (typeof value === 'object') {
        return !!value[symbols_1.isValueSourceObject];
    }
    return false;
}
exports.isValueSource = isValueSource;
function __getValueSourceOfObject(obj, prop) {
    const result = obj[prop];
    if (!result) {
        return undefined;
    }
    if (typeof result !== 'object') {
        return undefined;
    }
    if (result[symbols_1.isValueSourceObject]) {
        return result;
    }
    else {
        return undefined;
    }
}
exports.__getValueSourceOfObject = __getValueSourceOfObject;
function __getValueSourcePrivate(valueSource) {
    return valueSource;
}
exports.__getValueSourcePrivate = __getValueSourcePrivate;
class Argument {
    constructor(argumentType, typeName, optionalType, mode, adapter) {
        this.type = argumentType;
        this.typeName = typeName;
        this.optionalType = optionalType;
        this.mode = mode;
        this.adapter = adapter;
    }
}
exports.Argument = Argument;
function asAlwaysIfValueSource(valueSource) {
    return valueSource;
}
exports.asAlwaysIfValueSource = asAlwaysIfValueSource;
