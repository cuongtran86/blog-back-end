import { DynamicConditionExpression, DynamicFilter, Filterable } from "../expressions/dynamicConditionUsingFilters";
import { BooleanValueSource } from "../expressions/values";
import { SqlBuilder } from "../sqlBuilders/SqlBuilder";
export declare class DynamicConditionBuilder implements DynamicConditionExpression<any> {
    sqlBuilder: SqlBuilder;
    definition: Filterable;
    constructor(sqlBuilder: SqlBuilder, definition: Filterable);
    withValues(filter: DynamicFilter<any>): BooleanValueSource<any, any>;
    processFilter(filter: DynamicFilter<any>, definition: Filterable, prefix: string): BooleanValueSource<any, any>;
    processColumnFilter(filter: any, valueSource: any, column: string): BooleanValueSource<any, any>;
    processAndFilter(filter: DynamicFilter<any>[], definition: Filterable, prefix: string): BooleanValueSource<any, any>;
    processOrFilter(filter: DynamicFilter<any>[], definition: Filterable, prefix: string): BooleanValueSource<any, any>;
}
